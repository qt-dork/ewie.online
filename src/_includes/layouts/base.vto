<!DOCTYPE <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta content="light dark" name="supported-color-schemes">

  <meta property="og:type" content="website">
  {{ if title }}
    <title>{{ title }} - Evie On-line</title>
    <meta property="og:title" content="{{ title }} - Evie On-Line">
    <meta name="twitter:title" content="{{ title }} - Evie On-Line">
  {{ else }}
    <title>Evie On-line</title>
    <meta property="og:title" content="Evie On-line">
    <meta name="twitter:title" content="Evie On-line">
  {{ /if }}
  {{ if description }}
    <meta name="description" content="{{ description |> replace("\n", " ") |> trim }}">
    <meta property="og:description" content="{{ description |> replace("\n", " ") |> trim }}">
    <meta name="twitter:description" content="{{ description |> replace("\n", " ") |> trim }}">
  {{ else }}
    <meta name="description" content="gay plural trans lesbian disaster. i've done some cursed programming stuff but i'm hoping that if i can just get better and hotter then maybe i can make something even worse">
    <meta property="og:description" content="gay plural trans lesbian disaster. i've done some cursed programming stuff but i'm hoping that if i can just get better and hotter then maybe i can make something even worse">
    <meta name="twitter:description" content="gay plural trans lesbian disaster. i've done some cursed programming stuff but i'm hoping that if i can just get better and hotter then maybe i can make something even worse">
  {{ /if }}
  {{#
  <meta property="og:image" content="https://pixelde.su/assets/img/avatar.png">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="@pixeldesu">
  #}}
  {{ if (index === false) || (post_draft === true) }}
    <meta name="robots" content="noindex,nofollow">
  {{ /if }}
  <link rel="me" href="https://social.lol/@ewie">
  {{ if type === "post"}}
    <meta property="fediverse:creator" content="@ewie@social.lol">
  {{ /if }}
  <!-- he does some links here -->
  <!-- <link
    rel="preload"
    href="/fonts/Brix-Sans-Web-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Brix-Sans-Web-Regular-Italic.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Brix-Sans-Web-Black.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/FjallaOne-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  /> -->
  <!-- TODO: Remember to add favicon -->
  <link rel="icon" href="/favicon.ico" sizes="32x32">
  <link rel="icon" href="/icon.svg" type="image/svg+xml">
  <link rel="apple-touch-icon" href="/apple-touch-icon.png"><!-- 180Ã—180 -->
  <!-- <link rel="canonical" href="https://daniel-saunders.com{{ url }}" /> -->

  <!-- What's up with the css -->
  <!-- <link rel="stylesheet" href="/styles/critical.css" inline /> -->
  <link rel="stylesheet" href="/styles/main.css" />

  <!-- Pagefind UI -->
  {{#
  <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
  <script src="/pagefind/pagefind-ui.js"></script>
  #}}

  <!-- Page CSS -->
  {{ if it.page_css }}
  <link rel="stylesheet" href="/styles/pages/{{ page_css }}" />
  {{ /if }}
  <link rel="sitemap" href="/sitemap.xml" />
  {{ if (url.toString().includes("post")) }}
    <script src="https://unpkg.com/htmx.org@2.0.4"
      integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+"
      crossorigin="anonymous"
    ></script>
    <meta name="htmx-config" content='{"selfRequestsOnly": false}' />
  {{ /if }}

  <script>
  // Create on the global for use by the theme picker
  window.theme = {
    appearance: {
      /**
       * @returns {string}
       */
      get: () => {
        let appearance = localStorage.getItem("theme-appearance") || "";
        if (!["system", "light", "dark"].includes(appearance)) {
          appearance = "system";
        }
        return appearance;
      },
      /**
       * @param {string} value
       */
      set: (value) => {
        localStorage.setItem("theme-appearance", value);
        if (value === "system") {
          // TODO remove

          document.documentElement.setAttribute(
            "data-theme-appearance",
            window.matchMedia("(prefers-color-scheme: dark)").matches
              ? "dark"
              : "light"
          );
        } else {
          document.documentElement.setAttribute("data-theme-appearance", value);
        }

        updateMeta();
      },
    },
    color: {
      get: () => {
        let color = localStorage.getItem("theme-color") || "";
        if (!color) {
          color = "white";
        }
        return color;
      },
      /**
       * @param {string} color
       */
      set: (color) => {
        localStorage.setItem("theme-color", color);
        document.documentElement.style.setProperty(
          `--primary`,
          `var(--${color})`
        );
        updateMeta();
      },
    },
  };

  // create this <meta name="theme-color" content="#4285f4" />
  function updateMeta() {
    /** @type {HTMLMetaElement | null} */
    let $el = document.querySelector("meta[name=theme-color]");

    // Use the root element's background color
    const themeBgColor = getComputedStyle(
      document.documentElement
    ).backgroundColor;

    // If it's already in the DOM, update it. Otherwise create and insert it.
    if ($el) {
      $el.content = themeBgColor;
    } else {
      $el = document.createElement("meta");
      $el.name = "theme-color";
      $el.content = themeBgColor;
      document.head.appendChild($el);
    }
  }

  // Initialization

  // Set the initial theme
  window.theme.appearance.set(window.theme.appearance.get());
  window.theme.color.set(window.theme.color.get());

  // Watch for system changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      if (window.theme.appearance.get() === "system") {
        document.documentElement.setAttribute(
          "data-theme-appearance",
          e.matches ? "dark" : "light"
        );
      }
    });

  // Handle 'back' button if you came from the menu and changed something
  window.addEventListener("pageshow", (event) => {
    if (event.persisted) {
      // Page loaded from bfcache (back/forward button)
      window.theme.appearance.set(window.theme.appearance.get());
      window.theme.color.set(window.theme.color.get());
    }
  });
  </script>

  <!-- prettier-ignore -->
  {{ if it.page_script }}
  <script src="/js/{{ page_script }}" type="module" async></script>
  {{ /if }}
  <!-- <script type="module" src="/assets/js/components/card-frame.js"></script> -->
</head>
<body>
  {{# <div class="body-wrapper"> #}}
    {{ comp.header({ menu_open: menu_open}) }}
    {{# {{ include "partials/site-header.vto" }} #}}
    <main class="center">{{ content }}</main>
    {{# {{ include "partials/site-footer.vto" }} #}}
    {{#
    <script src="/js/postSearch.js" async></script>
    #}}
    {{ comp.footer() }}
  {{# </div> #}}
</body>
</html>
